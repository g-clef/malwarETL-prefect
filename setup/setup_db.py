import os
import psycopg2
import requests


def setup_db():
    admin_username = os.environ.get("DB_ADMIN", "postgres")
    admin_password = os.environ.get("DB_PASSWORD")
    db_host = os.environ.get("DB_HOST")
    prefect_user = os.environ.get("PREFECT_USER", "prefect")
    prefect_password = os.environ.get("PREFECT_PASSWORD")
    prefect_db_name = os.environ.get("PREFECT_DB", "prefect")

    conn = psycopg2.connect(database="postgres", user=admin_username, password=admin_password, host=db_host)
    cursor = conn.cursor()
    user_sql = f"""CREATE USER  {prefect_user} WITH encrypted password '{prefect_password}'"""
    cursor.execute(user_sql)

    db_sql = f"""CREATE DATABASE {prefect_db_name}"""
    cursor.execute(db_sql)

    ownership_sql = f"""GRANT ALL PRIVILEGES ON DATABASE {prefect_db_name} TO {prefect_user}"""
    cursor.execute(ownership_sql)

    conn.close()


def setup_es():
    username = os.environ.get("PREFECT_ES_USER", "prefect")
    password = os.environ.get("PREFECT_ES_PASS", None)
    elastic_user = os.environ.get("ELASTIC_USER", "elastic")
    elastic_pass = os.environ.get("ELASTIC_PASS", None)
    post_data = {"password": password,
                 "roles": "superuser"
                 }
    response = requests.post(f"https://malwaretl-cluster-es-http.es:9200/_security/user/{username}",
                             json=post_data,
                             auth=(elastic_user, elastic_pass),
                             verify=False)
    if response.status_code not in (200, 201):
        raise Exception(f"problem with user creation: {response.json()}")


def main():
    setup_db()
    setup_es()


if __name__ == "__main__":
    main()
